// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model User {
//   id        Int      @id @default(autoincrement())
//   email     String   @unique
//   username  String   @unique
//   password  String
//   role      Role     @default(USER)
//   createAt  DateTime @default(now())
//   updateUt  DateTime @updatedAt
//   profile   Profile  @relation(fields: [profileId], references: [id])
//   profileId Int      @unique
// }
//
// model Profile {
//   id     Int     @id @default(autoincrement())
//   user   User?
//   name   String?
//   avatar String?
//   cover  String?
//   about  String?
// }

model Account {
  id Int    @id @default(autoincrement())
  userId            Int
  type              String?
  provider          String
  password          String?
  providerAccountId String?
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id Int    @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id Int    @id @default(autoincrement())
  name          String?
  email         String?   @unique
  role          Role      @default(BUYER)
  username      String?   @unique
  image         String?
  cover         String?
  about         String?
  emailVerified DateTime?
  nameShop String?
  description String?
  accounts      Account[]
  sessions      Session[]
  sellerSity     SellerCity[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  BUYER
  SELLER
}

enum TypePoint {
  Warehouse // Склад
  PickPoint // Пункт выдачи
  Transit //Транзитный
}

model City {
  id Int    @id @default(autoincrement())
  name String
  sellerCity SellerCity[]
}

model SellerCity{
  id Int    @id @default(autoincrement())
  user   User  @relation(fields: [idUser], references: [id])
  idUser Int
  city   City  @relation(fields: [idCity], references: [id])
  idCity Int
  typePoint TypePoint @default(Transit)
  sellerCityProducts SellerCityProducts[]
}

model SellerCityProducts{
  id Int    @id @default(autoincrement())
  sellerCity   SellerCity  @relation(fields: [idSellerCity], references: [id])
  idSellerCity Int
  product   Product  @relation(fields: [idProduct], references: [id])
  idProduct Int
  count Int?
}

model Product{
  id Int    @id @default(autoincrement())
  name String?
  image String?
  price Decimal?
  length Decimal?
  width Decimal?
  height Decimal?
  weight Decimal?
  description Decimal?
  sellerCityProducts SellerCityProducts[]
}